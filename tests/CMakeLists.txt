# Testing for Enki

include_directories(${PROJECT_SOURCE_DIR})
link_directories(${PROJECT_BINARY_DIR})

# Contain Catch testing framework main function.  Using CATCH_CONFIG_MAIN macro
# only this library reduce compilation time.
add_library(catch STATIC
	catch.cpp
	catch.hpp
)

# BDD test example.
add_executable(enkiTestBDD
        enkiTestBDD.cpp
)
target_link_libraries(enkiTestBDD enki catch)

add_test(enki-test enkiTestBDD "An Enki world may contain a robot")

# Test the World class.
add_executable(enkiTestWorld enkiTestWorld.cpp)
target_link_libraries(enkiTestWorld enki catch)

add_test(enki_test_empty_world enkiTestWorld "An empty Enki world")
add_test(enki_test_thymio enkiTestWorld "Thymio2")
add_test(enki_test_EPuck enkiTestWorld "EPuck")
add_test(enki_test_Marxbot enkiTestWorld "Marxbot")
add_test(enki_test_Khepera enkiTestWorld "Khepera")
add_test(enki_test_Sbot enkiTestWorld "S-Bot")

add_executable(randomWorld randomWorld.cpp WorldGenerator.cpp Randomizer2.cpp)
target_link_libraries(randomWorld catch enki)

add_test(random_world randomWorld)

add_executable(serialization serialization.cpp Randomizer.cpp)
target_link_libraries(serialization catch enki)

add_test(serialize serialization "Serialization")
add_test(deserialize serialization "Deserialization")

add_executable(serializationBenchmarks serializationBenchmarks.cpp Randomizer.cpp)
target_link_libraries(serializationBenchmarks enki)

add_executable(network network.cpp)
target_link_libraries(network enki ${dashel_LIBRARIES} ${CMAKE_THREAD_LIBS_INIT} catch)

add_test(network_basic network "A basic connection")

add_executable(testRandom testRandom.cpp Randomizer2.cpp WorldGenerator.cpp)
target_link_libraries(testRandom enki)
