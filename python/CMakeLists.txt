# find Python, make sure we use the same version for interpreter and libraries
find_package (Python3 COMPONENTS Interpreter Development)
message(STATUS "Python version from interpreter is ${Python3_VERSION_MAJOR}")
find_package(PythonLibs)

# make sure we have the right modules
if (Python3_FOUND AND Python3_Interpreter_FOUND AND Python3_EXECUTABLE AND Qt5Widgets_FOUND AND Qt5OpenGL_FOUND)
	message(STATUS "Python libs and executable found, looking for boost::python")
	find_package(Boost COMPONENTS python)
	if (Boost_FOUND)
		message(STATUS "boost::python found, generating python bindings")
		include_directories(${PROJECT_SOURCE_DIR} ${PYTHON_INCLUDE_DIRS} ${Boost_INCLUDE_DIR})
		python_add_module(pyenki enki.cpp)
		target_link_libraries(pyenki enki enkiviewer Qt5::OpenGL Qt5::Widgets ${OPENGL_gl_LIBRARY} ${Boost_LIBRARIES} ${PYTHON_LIBRARIES})
		# fix for old python_add_module
		set_target_properties(pyenki PROPERTIES PREFIX "")
		if (PYTHON_CUSTOM_TARGET)
			install(TARGETS pyenki LIBRARY DESTINATION ${PYTHON_CUSTOM_TARGET})
		else (PYTHON_CUSTOM_TARGET)
			if (PYTHON_DEB_INSTALL_TARGET)
				set(PYTHON_COMMAND "import sys; print 'lib/python'+str(sys.version_info[0])+'.'+str(sys.version_info[1])+'/dist-packages'")
			else (PYTHON_DEB_INSTALL_TARGET)
				set(PYTHON_COMMAND "from distutils.sysconfig import get_python_lib; print(get_python_lib(1, prefix='${CMAKE_INSTALL_PREFIX}'))")
			endif (PYTHON_DEB_INSTALL_TARGET)
			execute_process(COMMAND "${PYTHON_EXECUTABLE}" "-c" "${PYTHON_COMMAND}" OUTPUT_VARIABLE PYTHON_SITE_MODULES OUTPUT_STRIP_TRAILING_WHITESPACE)
			install(TARGETS pyenki LIBRARY DESTINATION ${PYTHON_SITE_MODULES})
		endif (PYTHON_CUSTOM_TARGET)
	else (Boost_FOUND)
		message(WARNING "You need boost::python to generate Python bindings")
	endif (Boost_FOUND)
else ()
	message(WARNING "Python libs or executable, or Qt5, or OpenGL not found, skipping Python bindings")
endif ()
